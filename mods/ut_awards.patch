# UT Adwards - notification players on the Battlegrounds in style "Unreal Tournament".
# Version: 0.8
# https://github.com/rescr1pt/tc_addons

 sql/tc_addons/ut_awards.sql | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/sql/tc_addons/ut_awards.sql b/sql/tc_addons/ut_awards.sql
new file mode 100644
index 0000000..a415e37
--- /dev/null
+++ b/sql/tc_addons/ut_awards.sql
@@ -0,0 +1,20 @@
+DELETE FROM trinity_string WHERE entry BETWEEN 20100 AND 20119;
+INSERT INTO trinity_string (entry, content_default, content_loc1, content_loc2, content_loc3, content_loc4, content_loc5, content_loc6, content_loc7, content_loc8) VALUES
+(20100, 'Double kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Двойное убийство!'),
+(20101, 'Triple kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Тройное убийство!'),
+(20102, 'Multi kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Мульти убийство!'),
+(20103, 'Mega kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Мега убийство!'),
+(20104, 'Ultra kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Ультра убийство!'),
+(20105, 'Monster kill!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Зверское убийство!'),
+(20106, 'Holy Shit!!!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Срань господня!!!'),
+
+(20110, '(%s) First blood!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Первая кровь!'),
+(20111, '(%s) Killing spree!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Произвёл серию убийств!'),
+
+(20112, '(%s) Dominating!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Доминирование!'),
+(20113, '(%s) Rampage!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Впал в ярость!'),
+(20114, '(%s) Unstoppable!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Неудержимый!'),
+(20115, '(%s) Godlike!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Божественный!'),
+(20116, '(%s) Beyond godlike!!!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Превзошёл богов!!!'),
+
+(20119, '(%s) Interrupted a series of kills (%s)!', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '(%s) Прервал серию убийств (%s)!');
\ No newline at end of file
 src/server/game/Battlegrounds/Battleground.cpp | 79 ++++++++++++++++++++++++++
 1 file changed, 79 insertions(+)

diff --git a/src/server/game/Battlegrounds/Battleground.cpp b/src/server/game/Battlegrounds/Battleground.cpp
index 211ab6c..050edaa 100644
--- a/src/server/game/Battlegrounds/Battleground.cpp
+++ b/src/server/game/Battlegrounds/Battleground.cpp
@@ -1802,6 +1802,16 @@ void Battleground::HandleKillPlayer(Player* victim, Player* killer)
         if (killer == victim)
             return;
 
+        // First blood 
+        for (BattlegroundScoreMap::const_iterator itr = PlayerScores.begin(); itr != PlayerScores.end(); ++itr)
+        {
+            if (itr->second->HonorableKills != 0)
+                break;
+
+            if ((*itr) == (*PlayerScores.rbegin()))
+                PSendMessageToAll(LANG_UTA_FIRST_BLOOD, CHAT_MSG_BG_SYSTEM_NEUTRAL, NULL, killer->GetName().c_str());
+        }
+
         UpdatePlayerScore(killer, SCORE_HONORABLE_KILLS, 1);
         UpdatePlayerScore(killer, SCORE_KILLING_BLOWS, 1);
 
@@ -1822,6 +1832,75 @@ void Battleground::HandleKillPlayer(Player* victim, Player* killer)
         victim->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_SKINNABLE);
         RewardXPAtKill(killer, victim);
     }
+
+    /// UT Awards
+
+    if (!isBattleground())
+        return;
+
+    BattlegroundScoreMap::const_iterator killerIt = PlayerScores.find(killer->GetGUID());
+    BattlegroundScoreMap::const_iterator victimIt = PlayerScores.find(victim->GetGUID());
+
+    if (killerIt != PlayerScores.end() || victimIt != PlayerScores.end() || !killerIt->second || !victimIt->second)
+        return;
+
+    BattlegroundScore::KillStreakInfo& killerKillStreak = killerIt->second->KillStreak;
+    BattlegroundScore::KillStreakInfo& victimKillStreak = victimIt->second->KillStreak;
+
+    // Can freely to change it.
+    const uint8 IntervBetKills = 5;
+
+    // Interrupted a series of kills
+    if (victimKillStreak.Public >= IntervBetKills) 
+        PSendMessageToAll(LANG_UTA_INTERRUPTED_SERIES, CHAT_MSG_BG_SYSTEM_NEUTRAL, NULL, killer->GetName().c_str(), victim->GetName().c_str());
+
+    victimKillStreak.Private = 0;
+    victimKillStreak.Public = 0;
+    ++killerKillStreak.Private;
+    ++killerKillStreak.Public;
+
+    // Public award
+    uint16 divided = killerKillStreak.Public / IntervBetKills;
+    if (divided > 0 && (killerKillStreak.Public % IntervBetKills) == 0)
+    {
+        int32 publicAwardEntry = LANG_UTA_KILLING_SPREE + (divided - 1);
+        if (publicAwardEntry > LANG_UTA_BEYOND_GODLIKE)
+            publicAwardEntry = LANG_UTA_BEYOND_GODLIKE;
+ 
+        PSendMessageToAll(publicAwardEntry, CHAT_MSG_BG_SYSTEM_NEUTRAL, NULL, killer->GetName().c_str());
+    }
+
+    // Private award
+    const uint16 maxTimeIntervBetwKills = 5000;
+    if (killerKillStreak.Private >= 2)
+    {
+        if (GetMSTimeDiffToNow(killerKillStreak.LastKillTime) <= maxTimeIntervBetwKills)
+        {
+            int32 privateAwardEntry = LANG_UTA_DOUBLE_KILL + (killerKillStreak.Private - 2);
+            if (privateAwardEntry > LANG_UTA_HOLY_SHIT)
+                privateAwardEntry = LANG_UTA_HOLY_SHIT;
+
+            std::string message(killer->GetSession()->GetTrinityString(privateAwardEntry));
+   
+            // todo: packet builder
+            WorldPacket data(SMSG_MESSAGECHAT, 200);
+            data << (uint8)CHAT_MSG_RAID_BOSS_EMOTE;
+            data << (uint32)LANG_UNIVERSAL;
+            data << (uint64)0;
+            data << (uint32)0;  
+            data << (uint32)1;
+            data << (uint8)0;
+            data << (uint64)0;
+            data << (uint32)(message.length() + 1);
+            data << message.c_str();
+            data << (uint8)0;
+            killer->GetSession()->SendPacket(&data);
+        }
+        else
+            killerKillStreak.Private = 1;
+    }
+
+    killerKillStreak.LastKillTime = getMSTime();
 }
 
 // Return the player's team based on battlegroundplayer info
 src/server/game/Battlegrounds/Battleground.h | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/server/game/Battlegrounds/Battleground.h b/src/server/game/Battlegrounds/Battleground.h
index 76ff08e..0290cea 100644
--- a/src/server/game/Battlegrounds/Battleground.h
+++ b/src/server/game/Battlegrounds/Battleground.h
@@ -251,6 +251,15 @@ struct BattlegroundScore
     uint32 BonusHonor;
     uint32 DamageDone;
     uint32 HealingDone;
+
+    struct KillStreakInfo
+    {
+        KillStreakInfo() : Private(0), Public(0), LastKillTime(0) {}
+
+        uint8 Private;
+        uint16 Public;
+        uint32 LastKillTime;
+    } KillStreak;
 };
 
 enum BGHonorMode
 src/server/game/Miscellaneous/Language.h | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/src/server/game/Miscellaneous/Language.h b/src/server/game/Miscellaneous/Language.h
index 327d7ed..ba3c7b0 100644
--- a/src/server/game/Miscellaneous/Language.h
+++ b/src/server/game/Miscellaneous/Language.h
@@ -1215,6 +1215,23 @@ enum TrinityStrings
     LANG_AUTO_BROADCAST                 = 11000,
     LANG_INVALID_REALMID                = 11001,
 
+         // UT Awards
+    LANG_UTA_DOUBLE_KILL                = 20100,
+    LANG_UTA_TRIPLE_KILL                = 20101,
+    LANG_UTA_MULTI_KILL                 = 20102,
+    LANG_UTA_MEGA_KILL                  = 20103,
+    LANG_UTA_ULTRA_KILL                 = 20104,
+    LANG_UTA_MONSTER_KILL               = 20105,
+    LANG_UTA_HOLY_SHIT                  = 20106,
+    LANG_UTA_FIRST_BLOOD                = 20110,
+    LANG_UTA_KILLING_SPREE              = 20111,
+    LANG_UTA_DOMINATION                 = 20112,
+    LANG_UTA_RAMPAGE                    = 20113,
+    LANG_UTA_UNSTOPPABLE                = 20114,
+    LANG_UTA_GODLIKE                    = 20115,
+    LANG_UTA_BEYOND_GODLIKE             = 20116,
+    LANG_UTA_INTERRUPTED_SERIES         = 20119,
+
     // NOT RESERVED IDS                   12000-1999999999
     // `db_script_string` table index     2000000000-2000009999 (MIN_DB_SCRIPT_STRING_ID-MAX_DB_SCRIPT_STRING_ID)
     // For other tables maybe             2000010000-2147483647 (max index)
